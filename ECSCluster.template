{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "ECS Environment",
  "Parameters": {
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair"
    },
    "ECSInstanceType": {
      "Type": "String",
      "Description": "ECS instance type",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m4.large",
        "m4.xlarge"
      ]
    },
    "ECSClusterInstanceCount": {
      "Type": "Number",
      "Description": "The number of EC2 instances in the ECS Cluster",
      "Default": "2",
      "AllowedValues": [
        "1",
        "2",
        "3",
        "4"
      ]
    }
  },
  "Mappings": {
    "AmazonLinuxAMI": {
      "us-east-1": {
        "AMI": "ami-6df8fe7a"
      },
      "us-east-2": {
        "AMI": "ami-c6b5efa3"
      },
      "us-west-1": {
        "AMI": "ami-1eda8d7e"
      },
      "us-west-2": {
        "AMI": "ami-a2ca61c2"
      },
      "eu-west-1": {
        "AMI": "ami-ba346ec9"
      },
      "eu-west-2": {
        "AMI": "ami-42c5cf26"
      },
      "eu-central-1": {
        "AMI": "ami-e012d48f"
      },
      "ap-northeast-1": {
        "AMI": "ami-08f7956f"
      },
      "ap-southeast-1": {
        "AMI": "ami-f4832f97"
      },
      "ap-southeast-2": {
        "AMI": "ami-774b7314"
      },
      "ca-central-1": {
        "AMI": "ami-be45f7da"
      }
    },
    "VPCLayout": {
      "VPC": {
        "CIDR": "10.5.0.0/16"
      },
      "PublicSubnet1Config": {
        "CIDR": "10.5.10.0/24"
      },
      "PublicSubnet2Config": {
        "CIDR": "10.5.15.0/24"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": {
          "Fn::FindInMap": [
            "VPCLayout",
            "VPC",
            "CIDR"
          ]
        },
        "Tags": [
          {
            "Key": "VPC",
            "Value": "ECS"
          },
          {
            "Key": "Name",
            "Value": "ECS Demo Cluster"
          }
        ]
      }
    },
    "HostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "HostedZoneConfig": {
          "Comment": "Hosted Zone for ECS Demo Cluster"
        },
        "Name": "ecscluster.demo",
        "VPCs": [
          {
            "VPCId": {
              "Ref": "VPC"
            },
            "VPCRegion": {
              "Ref": "AWS::Region"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": "VPC"
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": [
        "VPC",
        "InternetGateway"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "VPCLayout",
            "PublicSubnet1Config",
            "CIDR"
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet 1"
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": [
            "VPCLayout",
            "PublicSubnet2Config",
            "CIDR"
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet 2"
          }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": [
        "VPC",
        "AttachGateway"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "PublicRouteTable",
        "AttachGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicRouteTable",
        "PublicSubnet1",
        "AttachGateway"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicRouteTable",
        "PublicSubnet2"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "ECSInstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "AttachGateway",
      "Properties": {
        "GroupDescription": "Security Group for ECSInstance",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ECSInstanceSecurityGroup"
          }
        ]
      }
    },
    "ECSInstanceSecurityGroupApps": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "ECSInstanceSecurityGroup",
      "Properties": {
        "GroupId": {
          "Ref": "ECSInstanceSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": 0,
        "ToPort": 65535,
        "SourceSecurityGroupId": {
          "Ref": "ECSInstanceSecurityGroup"
        }
      }
    },
    "ECSInstanceSecurityGroupAppsSSH": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "ECSInstanceSecurityGroup",
      "Properties": {
        "GroupId": {
          "Ref": "ECSInstanceSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": 22,
        "ToPort": 22,
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ECSInstanceSecurityGroupAppsWeb": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "ECSInstanceSecurityGroup",
      "Properties": {
        "GroupId": {
          "Ref": "ECSInstanceSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": 80,
        "ToPort": 80,
        "CidrIp": "0.0.0.0/0"
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "Comment": "Install a simple application",
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/etc/init/ecssd_agent.conf": {
                "source": "https://raw.githubusercontent.com/awslabs/service-discovery-ecs-dns/1.0/ecssd_agent.conf",
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/usr/local/bin/ecssd_agent": {
                "source": "https://github.com/awslabs/service-discovery-ecs-dns/releases/download/1.6/ecssd_agent",
                "mode": "000755",
                "owner": "root",
                "group": "root"
              }
            }
          }
        }
      },
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AmazonLinuxAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "ECSInstanceSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "ECSInstanceType"
        },
        "AssociatePublicIpAddress": "true",
        "IamInstanceProfile": {
          "Fn::GetAtt": [
            "InstanceProfile",
            "Arn"
          ]
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "echo ECS_CLUSTER=",
                {
                  "Ref": "ECSCluster"
                },
                " >> /etc/ecs/ecs.config\n",
                "yum install -y aws-cfn-bootstrap\n",
                "yum update -y aws-cfn-bootstrap\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource LaunchConfig ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "start ecssd_agent\n"
              ]
            ]
          }
        }
      }
    },
    "ServerGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          {
            "Fn::GetAtt": [
              "PublicSubnet1",
              "AvailabilityZone"
            ]
          },
          {
            "Fn::GetAtt": [
              "PublicSubnet2",
              "AvailabilityZone"
            ]
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "PublicSubnet1"
          },
          {
            "Ref": "PublicSubnet2"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": {
          "Ref": "ECSClusterInstanceCount"
        },
        "MaxSize": {
          "Ref": "ECSClusterInstanceCount"
        },
        "DesiredCapacity": {
          "Ref": "ECSClusterInstanceCount"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Name",
            "Value": "ECS refarch instance",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
          "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
          "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
        ],
        "Path": "/"
      }
    },
    "ECSRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ecs.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole"
        ],
        "Path": "/"
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "ECSCluster": {
      "Type": "AWS::ECS::Cluster",
      "DependsOn": "HostedZone"
    },
    "PortalELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "PublicSubnet1"
          },
          {
            "Ref": "PublicSubnet2"
          }
        ],
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "80",
            "Protocol": "HTTP"
          },
          {
            "LoadBalancerPort": "8761",
            "InstancePort": "8761",
            "Protocol": "TCP"
          }
        ],
        "HealthCheck": {
          "Target": "HTTP:80/",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        },
        "SecurityGroups": [
          {
            "Ref": "ECSInstanceSecurityGroup"
          }
        ]
      }
    }
  },
  "Outputs": {
    "PortalURL": {
      "Description": "Portal URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "PortalELB",
                "DNSName"
              ]
            },
            "/"
          ]
        ]
      }
    }
  }
}